from bot import *
import re
from modules.db.index import *
from modules.pager.index import *
import playwright


def get_new_track(message, tgbot):

    """
    Call message with explanation of how to add tracking.
    """

    tgbot.send_message(
        message.from_user.id,
        f'–í–≤–µ–¥–∏—Ç–µ "–¥–æ–±–∞–≤–∏—Ç—å [—Å—Å—ã–ª–∫–∞] [–Ω–∞–∑–≤–∞–Ω–∏–µ]", —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ.\n–ù–∞–ø—Ä–∏–º–µ—Ä: "–¥–æ–±–∞–≤–∏—Ç—å https://www.google.com –ì—É–≥–ª"',
    )


def prestart_track(bot):

    """
    Add functions of add tracking (get_new_track and add_tracking) to bot functionality.
    """

    bot.new_message(text="‚ûï –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ", callback=get_new_track)
    bot.new_message(text="–¥–æ–±–∞–≤–∏—Ç—å", callback=add_tracking)


def add_tracking(message, tgbot):

    """
    Add new tracking in DB, using split to get url and name from the message.
    :param track_url: url of the tracking.
    :param track_name: name of the tracking.
    """

    # if first word in message is not "–¥–æ–±–∞–≤–∏—Ç—å" return
    if message.text.split()[0] != "–¥–æ–±–∞–≤–∏—Ç—å":
        return

    user = db.find(message.from_user.id)

    # if user tracking list >= 10, send message to user and return
    if len(user["tracking"]) >= 10:
        tgbot.send_message(
            message.from_user.id,
            f"–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å 10 –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π. –£–¥–∞–ª–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –Ω–∏—Ö, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ.",
        )
        return

    track_url = str(message.text).split(" ")[1]
    track_name = str(message.text).split(" ")[2]

    # delete all symbols in track name except letters and numbers on rus or eng
    track_name = re.sub(r"[^a-zA-Z0-9–∞-—è–ê-–Ø]", "", track_name)

    # make track_url as url
    track_url = re.sub(r"^https?:\/\/", "", track_url)
    track_url = re.sub(r"\/$", "", track_url)
    track_url = "https://" + track_url

    if user["tracking"].get(track_name):
        # send message about track name are used and return
        tgbot.send_message(
            message.chat.id,
            f'–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º "{track_name}". –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.',
        )
        return
    else:
        # send message about track added
        tgbot.send_message(
            message.chat.id,
            f'‚åö –î–æ–±–∞–≤–ª—è–µ–º "{track_name}", —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –æ—Ç –æ–¥–Ω–æ–π —Å–µ–∫—É–Ω–¥—ã –¥–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∏–Ω—É—Ç.',
        )
        try:
            response = pager.update(track_name, track_url, message.from_user.id, "img")
        except playwright._impl._api_types.Error:
            # send message about error
            tgbot.send_message(
                message.chat.id,
                f"‚ùå –°–∞–π—Ç {track_url} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.",
            )
            return
        print(response)

        # add new tracking in DB
        user["tracking"][track_name] = {
            "url": track_url,
            "name": track_name,
            "update": time.time(),
        }
        db.save(
            message.from_user.id,
            {"$set": user},
        )
        tgbot.send_photo(
            message.chat.id,
            caption="üòé –ì–æ—Ç–æ–≤–æ, —Ç–µ–ø–µ—Ä—å —è —Å–ª–µ–∂—É –∑–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π",
            photo=open(response["path"] + "/img.png", "rb"),
        )
